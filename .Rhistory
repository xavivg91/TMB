}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712", line=2)
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona. You can extract information like:
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c(6, 7, 11, 13, 19, 21, 22, 23, 24, 27, 33, 34, 39,
#'                    46, 47, 52, 54, 55, 59, 60, 62, 63, 65, 67, 68,
#'                    70, 75, 76, 78, 79, 91, 94, 95, 96, 97, 100, 101,
#'                    102, 103, 104, 107, 109, 110, 111, 112, 113, 114,
#'                    115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
#'                    125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
#'                    136, 150, 155, 157, 165, 185, 191, 192, 196, 201,
#'                    202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#'                    212, 213, 214, 215, 216, 217, 219, 220, 221, 223,
#'                    225, 227, 229, 231, 233, 240, 250))
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
# Select fields
cbind(dataset) %>%
dplyr::select(properties.CODI_PARADA,
properties.NOM_PARADA, properties.ADRECA, properties.NOM_VIA,
properties.NOM_DISTRICTE, properties.NOM_POBLACIO,
properties.ORDRE, properties.DISTANCIA_PAR_ANTERIOR,
properties.ES_ORIGEN, properties.ES_DESTI, properties.ORIGEN_SENTIT,
properties.DESTI_SENTIT, properties.ID_SENTIT, properties.DESC_SENTIT,
properties.ID_LINIA, properties.CODI_LINIA, properties.NOM_LINIA, Latitude,
Longitude)
}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712", line=2)
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona. You can extract information like:
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c(6, 7, 11, 13, 19, 21, 22, 23, 24, 27, 33, 34, 39,
#'                    46, 47, 52, 54, 55, 59, 60, 62, 63, 65, 67, 68,
#'                    70, 75, 76, 78, 79, 91, 94, 95, 96, 97, 100, 101,
#'                    102, 103, 104, 107, 109, 110, 111, 112, 113, 114,
#'                    115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
#'                    125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
#'                    136, 150, 155, 157, 165, 185, 191, 192, 196, 201,
#'                    202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#'                    212, 213, 214, 215, 216, 217, 219, 220, 221, 223,
#'                    225, 227, 229, 231, 233, 240, 250))
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
Latitude <- vector()
Longitude <- vector()
# Latitude and longitude in separate columns
for(i in 1:nrow(dataset)){
Latitude[i] <- dataset$geometry.coordinates[[i]][1]
Longitude[i] <- dataset$geometry.coordinates[[i]][2]
}
# Select fields
cbind(dataset) %>%
dplyr::select(properties.CODI_PARADA,
properties.NOM_PARADA, properties.ADRECA, properties.NOM_VIA,
properties.NOM_DISTRICTE, properties.NOM_POBLACIO,
properties.ORDRE, properties.DISTANCIA_PAR_ANTERIOR,
properties.ES_ORIGEN, properties.ES_DESTI, properties.ORIGEN_SENTIT,
properties.DESTI_SENTIT, properties.ID_SENTIT, properties.DESC_SENTIT,
properties.ID_LINIA, properties.CODI_LINIA, properties.NOM_LINIA, Latitude,
Longitude)
}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712", line=2)
View(mierda2)
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona. You can extract information like:
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c(6, 7, 11, 13, 19, 21, 22, 23, 24, 27, 33, 34, 39,
#'                    46, 47, 52, 54, 55, 59, 60, 62, 63, 65, 67, 68,
#'                    70, 75, 76, 78, 79, 91, 94, 95, 96, 97, 100, 101,
#'                    102, 103, 104, 107, 109, 110, 111, 112, 113, 114,
#'                    115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
#'                    125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
#'                    136, 150, 155, 157, 165, 185, 191, 192, 196, 201,
#'                    202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#'                    212, 213, 214, 215, 216, 217, 219, 220, 221, 223,
#'                    225, 227, 229, 231, 233, 240, 250))
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
Latitude <- vector()
Longitude <- vector()
# Latitude and longitude in separate columns
for(i in 1:nrow(dataset)){
Latitude[i] <- dataset$geometry.coordinates[[i]][1]
Longitude[i] <- dataset$geometry.coordinates[[i]][2]
}
# Select fields
cbind(dataset, Latitude, Longitude) %>%
dplyr::select(properties.CODI_ESTACIO, properties.NOM_ESTACIO,
properties.ORDRE_ESTACIO, properties.CODI_LINIA,
properties.NOM_LINIA, properties.ORIGEN_SERVEI,
properties.DESTI_SERVEI, properties.DATA_INAUGURACIÓ, Latitude,
Longitude) %>%
dplyr::arrange(properties.CODI_LINIA,  properties.ORDRE_ESTACIO) %>%
dplyr::rename(`Station code`=properties.CODI_ESTACIO,
`Station name`=properties.NOM_ESTACIO,
`Order`=properties.ORDRE_ESTACIO,
`Line code`=properties.CODI_LINIA,
`Line name`=properties.NOM_LINIA,
`Line origin`=properties.ORIGEN_SERVEI,
`Line destination`=properties.DESTI_SERVEI,
`Opening date`=properties.DATA_INAUGURACIÓ)
}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712")
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona. You can extract information like:
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c(6, 7, 11, 13, 19, 21, 22, 23, 24, 27, 33, 34, 39,
#'                    46, 47, 52, 54, 55, 59, 60, 62, 63, 65, 67, 68,
#'                    70, 75, 76, 78, 79, 91, 94, 95, 96, 97, 100, 101,
#'                    102, 103, 104, 107, 109, 110, 111, 112, 113, 114,
#'                    115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
#'                    125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
#'                    136, 150, 155, 157, 165, 185, 191, 192, 196, 201,
#'                    202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#'                    212, 213, 214, 215, 216, 217, 219, 220, 221, 223,
#'                    225, 227, 229, 231, 233, 240, 250))
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
Latitude <- vector()
Longitude <- vector()
# Latitude and longitude in separate columns
for(i in 1:nrow(dataset)){
Latitude[i] <- dataset$geometry.coordinates[[i]][1]
Longitude[i] <- dataset$geometry.coordinates[[i]][2]
}
# Select fields
cbind(dataset, Latitude, Longitude) %>%
dplyr::select(properties.CODI_ESTACIO, properties.NOM_ESTACIO,
properties.ORDRE_ESTACIO, properties.CODI_LINIA,
properties.NOM_LINIA, properties.ORIGEN_SERVEI,
properties.DESTI_SERVEI, properties.DATA_INAUGURACIO, Latitude,
Longitude) %>%
dplyr::arrange(properties.CODI_LINIA,  properties.ORDRE_ESTACIO) %>%
dplyr::rename(`Station code`=properties.CODI_ESTACIO,
`Station name`=properties.NOM_ESTACIO,
`Order`=properties.ORDRE_ESTACIO,
`Line code`=properties.CODI_LINIA,
`Line name`=properties.NOM_LINIA,
`Line origin`=properties.ORIGEN_SERVEI,
`Line destination`=properties.DESTI_SERVEI,
`Opening date`=properties.DATA_INAUGURACIÓ)
}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712")
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona. You can extract information like:
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c(6, 7, 11, 13, 19, 21, 22, 23, 24, 27, 33, 34, 39,
#'                    46, 47, 52, 54, 55, 59, 60, 62, 63, 65, 67, 68,
#'                    70, 75, 76, 78, 79, 91, 94, 95, 96, 97, 100, 101,
#'                    102, 103, 104, 107, 109, 110, 111, 112, 113, 114,
#'                    115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
#'                    125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
#'                    136, 150, 155, 157, 165, 185, 191, 192, 196, 201,
#'                    202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
#'                    212, 213, 214, 215, 216, 217, 219, 220, 221, 223,
#'                    225, 227, 229, 231, 233, 240, 250))
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
Latitude <- vector()
Longitude <- vector()
# Latitude and longitude in separate columns
for(i in 1:nrow(dataset)){
Latitude[i] <- dataset$geometry.coordinates[[i]][1]
Longitude[i] <- dataset$geometry.coordinates[[i]][2]
}
# Select fields
cbind(dataset, Latitude, Longitude) %>%
dplyr::select(properties.CODI_ESTACIO, properties.NOM_ESTACIO,
properties.ORDRE_ESTACIO, properties.CODI_LINIA,
properties.NOM_LINIA, properties.ORIGEN_SERVEI,
properties.DESTI_SERVEI, properties.DATA_INAUGURACIO, Latitude,
Longitude) %>%
dplyr::arrange(properties.CODI_LINIA,  properties.ORDRE_ESTACIO) %>%
dplyr::rename(`Station code`=properties.CODI_ESTACIO,
`Station name`=properties.NOM_ESTACIO,
`Order`=properties.ORDRE_ESTACIO,
`Line code`=properties.CODI_LINIA,
`Line name`=properties.NOM_LINIA,
`Line origin`=properties.ORIGEN_SERVEI,
`Line destination`=properties.DESTI_SERVEI,
`Opening date`=properties.DATA_INAUGURACIO)
}
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712")
View(mierda3)
devtools::document()
levels(mierda3$`Line code`)
#' Get data from the metro service in Barcelona
#' @description The \code{metro.stations()} function opens a connection
#' to the \href{https://www.tmb.cat/en/home}{TMB} API to retrieve data related
#' to the metro stations and lines in Barcelona.
#'
#'
#' @param app_id character
#' @param app_key character
#' @param line numeric
#' @author Xavier Vivancos
#' @usage
#' # Without the line argument, the function retrieves
#' # data from all metro stations
#' metro.stations(app_id, app_key)
#'
#' # Metro stations corresponding to the specified line
#' metro.stations(app_id, app_key,
#'                line = c())
#' @details
#'  \itemize{
#'   \item{To execute the function you need the credentials \code{app_id} and
#'   \code{app_key}.
#'    Register on the \href{https://developer.tmb.cat/docs/getting-started}{TMB API portal}
#'    and create an application to obtain your credentials}
#'  \item{If you want to retrieve all the metro stations
#'  and their resources, execute the function without arguments.}
#'  \item{You can filter by metro line and obtain a subset.}
#'  }
#'
#' @importFrom magrittr %>%
#' @importFrom rlang .data
#' @importFrom dplyr select rename mutate_at filter
#' @importFrom jsonlite fromJSON
#' @export metro.stations
metro.stations <- function(app_id, app_key, line){
# If you don't specify the line, the function retrieves data from all metro stations
if(missing(line)){
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/estacions?app_id="
url2 <- "&app_key="
url3 <- paste0(url1, app_id, url2, app_key)
# Data set
dataset <- jsonlite::fromJSON(url3, flatten=TRUE)$features
# The function retrieves data from metro stations corresponding to the specified line
}else{
# URL containing the requested data set
url1 <- "https://api.tmb.cat/v1/transit/linies/metro/"
url2 <- "/estacions?app_id="
url3 <- "&app_key="
url4 <- paste0(url1, line, url2, app_id, url3, app_key)
# Data set
dataset <- jsonlite::fromJSON(url4, flatten=TRUE)$features
}
Latitude <- vector()
Longitude <- vector()
# Latitude and longitude in separate columns
for(i in 1:nrow(dataset)){
Latitude[i] <- dataset$geometry.coordinates[[i]][1]
Longitude[i] <- dataset$geometry.coordinates[[i]][2]
}
# Select fields
cbind(dataset, Latitude, Longitude) %>%
dplyr::select(properties.CODI_ESTACIO, properties.NOM_ESTACIO,
properties.ORDRE_ESTACIO, properties.CODI_LINIA,
properties.NOM_LINIA, properties.ORIGEN_SERVEI,
properties.DESTI_SERVEI, properties.DATA_INAUGURACIO, Latitude,
Longitude) %>%
dplyr::arrange(properties.CODI_LINIA,  properties.ORDRE_ESTACIO) %>%
dplyr::rename(`Station code`=properties.CODI_ESTACIO,
`Station name`=properties.NOM_ESTACIO,
`Order`=properties.ORDRE_ESTACIO,
`Line code`=properties.CODI_LINIA,
`Line name`=properties.NOM_LINIA,
`Line origin`=properties.ORIGEN_SERVEI,
`Line destination`=properties.DESTI_SERVEI,
`Opening date`=properties.DATA_INAUGURACIO)%>%
dplyr::mutate_at(c(4, 5, 6, 7), as.factor)
}
levels(mierda3$`Line code`)
mierda3 <-metro.stations(app_id = "9a9f8b18",
app_key = "bd04450f85ae87cf1061c2867bed5712")
levels(mierda3$`Line code`)
devtools::document()
devtools::document()
